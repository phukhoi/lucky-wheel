import React from 'react';
import * as H from 'history';
export interface ExtendElementRef {
    [x: string]: any;
    getValue: () => string | null;
    setValue: (value: string) => void;
    setFocus: () => void;
    getBoundingClientRect: () => DOMRect | null;
}
export interface ExtendElementProps {
    [x: string]: any;
    className?: string;
    css?: React.CSSProperties;
    id?: string;
}
export declare const utils: {
    getName: (...args: any[]) => string;
    getClassNames: (...args: any[]) => string;
    goTo: (history: H.History<H.LocationState>, path: string) => void;
    openNewTab: (url: string) => void;
    useEvent: (event: string, callback: (e: Event) => void) => boolean;
    isElement: (e: any) => e is Element;
    isNode: (e: any) => e is Node;
    extendRef: (ref: React.MutableRefObject<any> | ((instance: any | null) => void) | null, elementRef: React.RefObject<any>, options?: object | undefined) => void;
};
//# sourceMappingURL=utils.d.ts.map