"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const utils_1 = require("../../../../utils");
const __1 = __importDefault(require(".."));
const _name = 'btn-group';
const ButtonGroup = props => {
    let { disabled, children } = props;
    let attrs = getAttrs(props);
    return react_1.default.createElement("div", Object.assign({}, attrs), getRenders(disabled, children));
};
const getAttrs = (props) => {
    let { disabled, className } = props;
    return {
        className: utils_1.utils.getClassNames(utils_1.utils.getName(_name), _name, {
            'disabled': disabled
        }, className)
    };
};
const getRenders = (disabled, children) => {
    let renders = [];
    if (children) {
        if (Array.isArray(children))
            for (let i = 0; i < children.length; i++)
                renders = renders.concat(getRenders(disabled, children[i]));
        else if (children.type === react_1.default.Fragment)
            renders = renders.concat(getRenders(disabled, children.props.children));
        else if (children.type === __1.default) {
            if (!children.props.circle)
                if (!children.props.variant || ['primary', 'default', 'dashed'].indexOf(children.props.variant) > -1) {
                    let child = (Object.assign({}, children));
                    if (disabled)
                        child.props = (Object.assign(Object.assign({}, child.props), { disabled }));
                    renders.push(child);
                }
        }
    }
    return renders;
};
exports.default = ButtonGroup;
//# sourceMappingURL=index.js.map