"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Control_1 = __importDefault(require("../Control"));
const utils_1 = require("../../../utils");
const Checkbox = (props, ref) => {
    const cbRef = react_1.default.useRef(null);
    utils_1.utils.extendRef(ref, cbRef);
    const [useProps, setUseProps] = react_1.default.useState(false);
    const [InputChecked, setInputChecked] = react_1.default.useState(false);
    react_1.default.useEffect(() => {
        if (!useProps) {
            setUseProps(true);
            setInputChecked(props.checked || false);
        }
    });
    let { id, before = false, type, className = '', children, checked } = props, others = __rest(props, ["id", "before", "type", "className", "children", "checked"]);
    return react_1.default.createElement("div", { className: 'custom-control custom-checkbox' },
        before && renderLabel(props),
        react_1.default.createElement(Control_1.default, Object.assign({ id: id, type: 'checkbox', ref: cbRef, className: utils_1.utils.getClassNames('custom-control-input', className), checked: InputChecked }, others, { onChange: (e) => {
                setInputChecked(e.target.checked);
                props.onChange && props.onChange(e);
            } })),
        before || renderLabel(props));
};
const renderLabel = (props) => {
    return react_1.default.createElement("label", Object.assign({}, getAttrsLabel(props)), props.children);
};
const getAttrsLabel = (props) => {
    let { id } = props;
    let rs = {
        className: utils_1.utils.getClassNames('custom-control-label')
    };
    id && Object.assign(rs, { htmlFor: id });
    return rs;
};
exports.default = react_1.default.forwardRef(Checkbox);
//# sourceMappingURL=index.js.map