"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Logo_1 = require("../Logo");
const Form = __importStar(require("../../../Form"));
const InputGroup_1 = __importDefault(require("../../../InputGroup"));
const Inputs = __importStar(require("../../../Inputs"));
const Icons_1 = require("../../../../Icons");
const utils_1 = require("../../../../utils");
const Header = props => {
    let { className } = props;
    className = utils_1.utils.getClassNames(className, 'navbar navbar-expand-lg navbar-fixed navbar-height navbar-flush navbar-container navbar-bordered');
    return react_1.default.createElement("header", { id: "header", className: className },
        react_1.default.createElement("div", { className: "navbar-nav-wrap" },
            react_1.default.createElement("div", { className: "navbar-brand-wrapper" },
                react_1.default.createElement(Logo_1.Logo, Object.assign({}, props.logo))),
            props.searchBar &&
                react_1.default.createElement("div", { className: "navbar-nav-wrap-content-left" },
                    react_1.default.createElement(Inputs.Button, { className: "js-navbar-vertical-aside-toggle-invoker close mr-3" },
                        react_1.default.createElement(Icons_1.IconFirstPage, { className: "navbar-vertical-aside-toggle-short-align", "data-toggle": "tooltip", "data-placement": "right", title: "Collapse" }),
                        react_1.default.createElement(Icons_1.IconLastPage, { className: "navbar-vertical-aside-toggle-full-align", "data-template": '<div className="tooltip d-none d-sm-block" role="tooltip"><div className="arrow"></div><div className="tooltip-inner"></div></div>', "data-toggle": "tooltip", "data-placement": "right", title: "Expand" })),
                    react_1.default.createElement("div", { className: "d-none d-md-block" },
                        react_1.default.createElement(Form.Container, { className: "position-relative" },
                            react_1.default.createElement(InputGroup_1.default, { merge: true, borderless: true, hoverLight: true, navbar: true },
                                react_1.default.createElement(InputGroup_1.default.Prepend, null,
                                    react_1.default.createElement(InputGroup_1.default.Text, null,
                                        react_1.default.createElement(Icons_1.IconSearch, null))),
                                react_1.default.createElement(InputGroup_1.default.Control, { type: "search", className: "js-form-search", placeholder: "Search in front", "aria-label": "Search in front", "data-hs-form-search-options": '{\n                    "clearIcon": "#clearSearchResultsIcon",\n                    "dropMenuElement": "#searchDropdownMenu",\n                    "dropMenuOffset": 20,\n                    "toggleIconOnFocus": true,\n                    "activeClass": "focus"\n                  }' }),
                                react_1.default.createElement(InputGroup_1.default.Append, { link: true },
                                    react_1.default.createElement(InputGroup_1.default.Text, { inline: true },
                                        react_1.default.createElement(Icons_1.IconClear, { id: "clearSearchResultsIcon", style: { display: 'none' } }))))))),
            props.right &&
                react_1.default.createElement("div", { className: "navbar-nav-wrap-content-right" }, props.right())));
};
exports.default = Header;
//# sourceMappingURL=index.js.map