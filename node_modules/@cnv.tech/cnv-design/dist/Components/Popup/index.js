"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Portal_1 = __importDefault(require("../../Portal"));
require("./index.css");
const Popup = props => {
    let { show = false, width, isStatic = false, onHide, className, children } = props;
    const popupRef = react_1.default.useRef(null);
    react_1.default.useEffect(() => {
        if (popupRef.current) {
            popupRef.current.querySelectorAll('[data-dismiss="popup"]').forEach(elDismiss => {
                elDismiss.addEventListener('click', dismiss, false);
            });
        }
        return () => {
            if (popupRef.current) {
                popupRef.current.querySelectorAll('[data-dismiss="popup"]').forEach(elDismiss => {
                    elDismiss.removeEventListener('click', dismiss, false);
                });
            }
        };
    }, [popupRef]);
    react_1.default.useEffect(() => {
        popupRef.current && show ? popupRef.current.classList.add('show') : dismiss();
    }, [show]);
    const dismiss = () => {
        console.log('hehehehe');
        if (popupRef.current && popupRef.current.classList.contains('show')) {
            popupRef.current.classList.add('hide');
            setTimeout(() => {
                if (popupRef.current) {
                    popupRef.current.classList.remove('show', 'hide');
                    onHide && onHide();
                }
            }, 300);
        }
    };
    const styleBody = {};
    width && (styleBody.width = width);
    return react_1.default.createElement(Portal_1.default, null,
        react_1.default.createElement("div", { className: `cnv-popup pos-fixed${className ? ' ' + className : ''}`, ref: popupRef },
            react_1.default.createElement("div", { className: "cnv-popup-backdrop", onClick: () => isStatic || dismiss() }),
            react_1.default.createElement("div", { className: "cnv-popup-body", style: styleBody }, children)));
};
exports.default = Popup;
//# sourceMappingURL=index.js.map